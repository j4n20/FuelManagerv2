//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FuelClient.Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FEmployee", Namespace="http://schemas.datacontract.org/2004/07/SupremeLollipopService")]
    [System.SerializableAttribute()]
    public partial class FEmployee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FuelClient.Service.Car[] ToCarsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isAdminField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeNo {
            get {
                return this.EmployeeNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNoField, value) != true)) {
                    this.EmployeeNoField = value;
                    this.RaisePropertyChanged("EmployeeNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FuelClient.Service.Car[] ToCars {
            get {
                return this.ToCarsField;
            }
            set {
                if ((object.ReferenceEquals(this.ToCarsField, value) != true)) {
                    this.ToCarsField = value;
                    this.RaisePropertyChanged("ToCars");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isAdmin {
            get {
                return this.isAdminField;
            }
            set {
                if ((this.isAdminField.Equals(value) != true)) {
                    this.isAdminField = value;
                    this.RaisePropertyChanged("isAdmin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/SupremeLollipopService")]
    [System.SerializableAttribute()]
    public partial class Car : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicensePlateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicensePlate {
            get {
                return this.LicensePlateField;
            }
            set {
                if ((object.ReferenceEquals(this.LicensePlateField, value) != true)) {
                    this.LicensePlateField = value;
                    this.RaisePropertyChanged("LicensePlate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordChangeEnum.Password", Namespace="http://schemas.datacontract.org/2004/07/SupremeLollipopService.Zusammensetzungen." +
        "Enums")]
    public enum PasswordChangeEnumPassword : ushort {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OldPasswordNotCorrect = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewPasswordNotMatching = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InputEmpty = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedSuccessfully = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CannotUseSamePassword = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseError = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Refuel", Namespace="http://schemas.datacontract.org/2004/07/SupremeLollipopService")]
    [System.SerializableAttribute()]
    public partial class Refuel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FuelClient.Service.Car CarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FuelClient.Service.Car Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((object.ReferenceEquals(this.MileageField, value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeToCarRelation", Namespace="http://schemas.datacontract.org/2004/07/SupremeLollipopService")]
    [System.SerializableAttribute()]
    public partial class EmployeeToCarRelation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FuelClient.Service.Car CarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FuelClient.Service.FEmployee FEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FuelClient.Service.Car Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FuelClient.Service.FEmployee FEmployee {
            get {
                return this.FEmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.FEmployeeField, value) != true)) {
                    this.FEmployeeField = value;
                    this.RaisePropertyChanged("FEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Verbrauch", Namespace="http://schemas.datacontract.org/2004/07/SupremeLollipopService.Zusammensetzungen." +
        "Verbrauch")]
    [System.SerializableAttribute()]
    public partial class Verbrauch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AveragePreisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AverageVerbrauchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FuelClient.Service.Car CarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FirstMileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LastMileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FuelClient.Service.Refuel RefuelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AveragePreis {
            get {
                return this.AveragePreisField;
            }
            set {
                if ((this.AveragePreisField.Equals(value) != true)) {
                    this.AveragePreisField = value;
                    this.RaisePropertyChanged("AveragePreis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AverageVerbrauch {
            get {
                return this.AverageVerbrauchField;
            }
            set {
                if ((this.AverageVerbrauchField.Equals(value) != true)) {
                    this.AverageVerbrauchField = value;
                    this.RaisePropertyChanged("AverageVerbrauch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FuelClient.Service.Car Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FirstMileage {
            get {
                return this.FirstMileageField;
            }
            set {
                if ((this.FirstMileageField.Equals(value) != true)) {
                    this.FirstMileageField = value;
                    this.RaisePropertyChanged("FirstMileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LastMileage {
            get {
                return this.LastMileageField;
            }
            set {
                if ((this.LastMileageField.Equals(value) != true)) {
                    this.LastMileageField = value;
                    this.RaisePropertyChanged("LastMileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Month {
            get {
                return this.MonthField;
            }
            set {
                if ((this.MonthField.Equals(value) != true)) {
                    this.MonthField = value;
                    this.RaisePropertyChanged("Month");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FuelClient.Service.Refuel Refuels {
            get {
                return this.RefuelsField;
            }
            set {
                if ((object.ReferenceEquals(this.RefuelsField, value) != true)) {
                    this.RefuelsField = value;
                    this.RaisePropertyChanged("Refuels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.IAuthentificationService")]
    public interface IAuthentificationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/CheckCredentials", ReplyAction="http://tempuri.org/IAuthentificationService/CheckCredentialsResponse")]
        FuelClient.Service.FEmployee CheckCredentials(FuelClient.Service.FEmployee user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/CheckCredentials", ReplyAction="http://tempuri.org/IAuthentificationService/CheckCredentialsResponse")]
        System.Threading.Tasks.Task<FuelClient.Service.FEmployee> CheckCredentialsAsync(FuelClient.Service.FEmployee user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/ChangePassword", ReplyAction="http://tempuri.org/IAuthentificationService/ChangePasswordResponse")]
        FuelClient.Service.PasswordChangeEnumPassword ChangePassword(FuelClient.Service.FEmployee user, string oldPassword, string newPassword, string repeatedNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/ChangePassword", ReplyAction="http://tempuri.org/IAuthentificationService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<FuelClient.Service.PasswordChangeEnumPassword> ChangePasswordAsync(FuelClient.Service.FEmployee user, string oldPassword, string newPassword, string repeatedNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetUsers", ReplyAction="http://tempuri.org/IAuthentificationService/GetUsersResponse")]
        FuelClient.Service.FEmployee[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetUsers", ReplyAction="http://tempuri.org/IAuthentificationService/GetUsersResponse")]
        System.Threading.Tasks.Task<FuelClient.Service.FEmployee[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetCars", ReplyAction="http://tempuri.org/IAuthentificationService/GetCarsResponse")]
        FuelClient.Service.Car[] GetCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetCars", ReplyAction="http://tempuri.org/IAuthentificationService/GetCarsResponse")]
        System.Threading.Tasks.Task<FuelClient.Service.Car[]> GetCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetRefuels", ReplyAction="http://tempuri.org/IAuthentificationService/GetRefuelsResponse")]
        FuelClient.Service.Refuel[] GetRefuels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetRefuels", ReplyAction="http://tempuri.org/IAuthentificationService/GetRefuelsResponse")]
        System.Threading.Tasks.Task<FuelClient.Service.Refuel[]> GetRefuelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetEmployeeToCar", ReplyAction="http://tempuri.org/IAuthentificationService/GetEmployeeToCarResponse")]
        FuelClient.Service.EmployeeToCarRelation[] GetEmployeeToCar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetEmployeeToCar", ReplyAction="http://tempuri.org/IAuthentificationService/GetEmployeeToCarResponse")]
        System.Threading.Tasks.Task<FuelClient.Service.EmployeeToCarRelation[]> GetEmployeeToCarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/SaveOrUpdate", ReplyAction="http://tempuri.org/IAuthentificationService/SaveOrUpdateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuelClient.Service.FEmployee))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuelClient.Service.Car[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuelClient.Service.Car))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuelClient.Service.FEmployee[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuelClient.Service.Refuel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuelClient.Service.Refuel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuelClient.Service.EmployeeToCarRelation[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuelClient.Service.EmployeeToCarRelation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuelClient.Service.PasswordChangeEnumPassword))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuelClient.Service.Verbrauch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuelClient.Service.Verbrauch))]
        void SaveOrUpdate(object o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/SaveOrUpdate", ReplyAction="http://tempuri.org/IAuthentificationService/SaveOrUpdateResponse")]
        System.Threading.Tasks.Task SaveOrUpdateAsync(object o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/DeleteUser", ReplyAction="http://tempuri.org/IAuthentificationService/DeleteUserResponse")]
        bool DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/DeleteUser", ReplyAction="http://tempuri.org/IAuthentificationService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/DeleteCar", ReplyAction="http://tempuri.org/IAuthentificationService/DeleteCarResponse")]
        bool DeleteCar(int CarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/DeleteCar", ReplyAction="http://tempuri.org/IAuthentificationService/DeleteCarResponse")]
        System.Threading.Tasks.Task<bool> DeleteCarAsync(int CarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/DeleteRefuel", ReplyAction="http://tempuri.org/IAuthentificationService/DeleteRefuelResponse")]
        bool DeleteRefuel(int RefuelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/DeleteRefuel", ReplyAction="http://tempuri.org/IAuthentificationService/DeleteRefuelResponse")]
        System.Threading.Tasks.Task<bool> DeleteRefuelAsync(int RefuelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/DeleteEmployeeToCarRelation", ReplyAction="http://tempuri.org/IAuthentificationService/DeleteEmployeeToCarRelationResponse")]
        bool DeleteEmployeeToCarRelation(FuelClient.Service.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/DeleteEmployeeToCarRelation", ReplyAction="http://tempuri.org/IAuthentificationService/DeleteEmployeeToCarRelationResponse")]
        System.Threading.Tasks.Task<bool> DeleteEmployeeToCarRelationAsync(FuelClient.Service.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/AddUser", ReplyAction="http://tempuri.org/IAuthentificationService/AddUserResponse")]
        bool AddUser(FuelClient.Service.FEmployee user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/AddUser", ReplyAction="http://tempuri.org/IAuthentificationService/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(FuelClient.Service.FEmployee user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/AddCar", ReplyAction="http://tempuri.org/IAuthentificationService/AddCarResponse")]
        bool AddCar(FuelClient.Service.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/AddCar", ReplyAction="http://tempuri.org/IAuthentificationService/AddCarResponse")]
        System.Threading.Tasks.Task<bool> AddCarAsync(FuelClient.Service.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/AddRefuel", ReplyAction="http://tempuri.org/IAuthentificationService/AddRefuelResponse")]
        bool AddRefuel(FuelClient.Service.Refuel refuel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/AddRefuel", ReplyAction="http://tempuri.org/IAuthentificationService/AddRefuelResponse")]
        System.Threading.Tasks.Task<bool> AddRefuelAsync(FuelClient.Service.Refuel refuel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/AddEmployeeToCar", ReplyAction="http://tempuri.org/IAuthentificationService/AddEmployeeToCarResponse")]
        bool AddEmployeeToCar(FuelClient.Service.EmployeeToCarRelation relation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/AddEmployeeToCar", ReplyAction="http://tempuri.org/IAuthentificationService/AddEmployeeToCarResponse")]
        System.Threading.Tasks.Task<bool> AddEmployeeToCarAsync(FuelClient.Service.EmployeeToCarRelation relation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetVerbrauch", ReplyAction="http://tempuri.org/IAuthentificationService/GetVerbrauchResponse")]
        FuelClient.Service.Verbrauch[] GetVerbrauch(FuelClient.Service.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetVerbrauch", ReplyAction="http://tempuri.org/IAuthentificationService/GetVerbrauchResponse")]
        System.Threading.Tasks.Task<FuelClient.Service.Verbrauch[]> GetVerbrauchAsync(FuelClient.Service.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetPreisentwicklung", ReplyAction="http://tempuri.org/IAuthentificationService/GetPreisentwicklungResponse")]
        FuelClient.Service.Verbrauch[] GetPreisentwicklung(FuelClient.Service.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetPreisentwicklung", ReplyAction="http://tempuri.org/IAuthentificationService/GetPreisentwicklungResponse")]
        System.Threading.Tasks.Task<FuelClient.Service.Verbrauch[]> GetPreisentwicklungAsync(FuelClient.Service.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetEmployeeToCarById", ReplyAction="http://tempuri.org/IAuthentificationService/GetEmployeeToCarByIdResponse")]
        FuelClient.Service.EmployeeToCarRelation[] GetEmployeeToCarById(FuelClient.Service.FEmployee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetEmployeeToCarById", ReplyAction="http://tempuri.org/IAuthentificationService/GetEmployeeToCarByIdResponse")]
        System.Threading.Tasks.Task<FuelClient.Service.EmployeeToCarRelation[]> GetEmployeeToCarByIdAsync(FuelClient.Service.FEmployee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetUnconnectedCars", ReplyAction="http://tempuri.org/IAuthentificationService/GetUnconnectedCarsResponse")]
        FuelClient.Service.Car[] GetUnconnectedCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetUnconnectedCars", ReplyAction="http://tempuri.org/IAuthentificationService/GetUnconnectedCarsResponse")]
        System.Threading.Tasks.Task<FuelClient.Service.Car[]> GetUnconnectedCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetRefuelById", ReplyAction="http://tempuri.org/IAuthentificationService/GetRefuelByIdResponse")]
        FuelClient.Service.Refuel[] GetRefuelById(FuelClient.Service.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetRefuelById", ReplyAction="http://tempuri.org/IAuthentificationService/GetRefuelByIdResponse")]
        System.Threading.Tasks.Task<FuelClient.Service.Refuel[]> GetRefuelByIdAsync(FuelClient.Service.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetCarIdByLicensePlate", ReplyAction="http://tempuri.org/IAuthentificationService/GetCarIdByLicensePlateResponse")]
        FuelClient.Service.Car GetCarIdByLicensePlate(string licensePlate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentificationService/GetCarIdByLicensePlate", ReplyAction="http://tempuri.org/IAuthentificationService/GetCarIdByLicensePlateResponse")]
        System.Threading.Tasks.Task<FuelClient.Service.Car> GetCarIdByLicensePlateAsync(string licensePlate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthentificationServiceChannel : FuelClient.Service.IAuthentificationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthentificationServiceClient : System.ServiceModel.ClientBase<FuelClient.Service.IAuthentificationService>, FuelClient.Service.IAuthentificationService {
        
        public AuthentificationServiceClient() {
        }
        
        public AuthentificationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthentificationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthentificationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthentificationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FuelClient.Service.FEmployee CheckCredentials(FuelClient.Service.FEmployee user) {
            return base.Channel.CheckCredentials(user);
        }
        
        public System.Threading.Tasks.Task<FuelClient.Service.FEmployee> CheckCredentialsAsync(FuelClient.Service.FEmployee user) {
            return base.Channel.CheckCredentialsAsync(user);
        }
        
        public FuelClient.Service.PasswordChangeEnumPassword ChangePassword(FuelClient.Service.FEmployee user, string oldPassword, string newPassword, string repeatedNewPassword) {
            return base.Channel.ChangePassword(user, oldPassword, newPassword, repeatedNewPassword);
        }
        
        public System.Threading.Tasks.Task<FuelClient.Service.PasswordChangeEnumPassword> ChangePasswordAsync(FuelClient.Service.FEmployee user, string oldPassword, string newPassword, string repeatedNewPassword) {
            return base.Channel.ChangePasswordAsync(user, oldPassword, newPassword, repeatedNewPassword);
        }
        
        public FuelClient.Service.FEmployee[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<FuelClient.Service.FEmployee[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public FuelClient.Service.Car[] GetCars() {
            return base.Channel.GetCars();
        }
        
        public System.Threading.Tasks.Task<FuelClient.Service.Car[]> GetCarsAsync() {
            return base.Channel.GetCarsAsync();
        }
        
        public FuelClient.Service.Refuel[] GetRefuels() {
            return base.Channel.GetRefuels();
        }
        
        public System.Threading.Tasks.Task<FuelClient.Service.Refuel[]> GetRefuelsAsync() {
            return base.Channel.GetRefuelsAsync();
        }
        
        public FuelClient.Service.EmployeeToCarRelation[] GetEmployeeToCar() {
            return base.Channel.GetEmployeeToCar();
        }
        
        public System.Threading.Tasks.Task<FuelClient.Service.EmployeeToCarRelation[]> GetEmployeeToCarAsync() {
            return base.Channel.GetEmployeeToCarAsync();
        }
        
        public void SaveOrUpdate(object o) {
            base.Channel.SaveOrUpdate(o);
        }
        
        public System.Threading.Tasks.Task SaveOrUpdateAsync(object o) {
            return base.Channel.SaveOrUpdateAsync(o);
        }
        
        public bool DeleteUser(int id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public bool DeleteCar(int CarId) {
            return base.Channel.DeleteCar(CarId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCarAsync(int CarId) {
            return base.Channel.DeleteCarAsync(CarId);
        }
        
        public bool DeleteRefuel(int RefuelId) {
            return base.Channel.DeleteRefuel(RefuelId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRefuelAsync(int RefuelId) {
            return base.Channel.DeleteRefuelAsync(RefuelId);
        }
        
        public bool DeleteEmployeeToCarRelation(FuelClient.Service.Car car) {
            return base.Channel.DeleteEmployeeToCarRelation(car);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEmployeeToCarRelationAsync(FuelClient.Service.Car car) {
            return base.Channel.DeleteEmployeeToCarRelationAsync(car);
        }
        
        public bool AddUser(FuelClient.Service.FEmployee user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(FuelClient.Service.FEmployee user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public bool AddCar(FuelClient.Service.Car car) {
            return base.Channel.AddCar(car);
        }
        
        public System.Threading.Tasks.Task<bool> AddCarAsync(FuelClient.Service.Car car) {
            return base.Channel.AddCarAsync(car);
        }
        
        public bool AddRefuel(FuelClient.Service.Refuel refuel) {
            return base.Channel.AddRefuel(refuel);
        }
        
        public System.Threading.Tasks.Task<bool> AddRefuelAsync(FuelClient.Service.Refuel refuel) {
            return base.Channel.AddRefuelAsync(refuel);
        }
        
        public bool AddEmployeeToCar(FuelClient.Service.EmployeeToCarRelation relation) {
            return base.Channel.AddEmployeeToCar(relation);
        }
        
        public System.Threading.Tasks.Task<bool> AddEmployeeToCarAsync(FuelClient.Service.EmployeeToCarRelation relation) {
            return base.Channel.AddEmployeeToCarAsync(relation);
        }
        
        public FuelClient.Service.Verbrauch[] GetVerbrauch(FuelClient.Service.Car car) {
            return base.Channel.GetVerbrauch(car);
        }
        
        public System.Threading.Tasks.Task<FuelClient.Service.Verbrauch[]> GetVerbrauchAsync(FuelClient.Service.Car car) {
            return base.Channel.GetVerbrauchAsync(car);
        }
        
        public FuelClient.Service.Verbrauch[] GetPreisentwicklung(FuelClient.Service.Car car) {
            return base.Channel.GetPreisentwicklung(car);
        }
        
        public System.Threading.Tasks.Task<FuelClient.Service.Verbrauch[]> GetPreisentwicklungAsync(FuelClient.Service.Car car) {
            return base.Channel.GetPreisentwicklungAsync(car);
        }
        
        public FuelClient.Service.EmployeeToCarRelation[] GetEmployeeToCarById(FuelClient.Service.FEmployee employee) {
            return base.Channel.GetEmployeeToCarById(employee);
        }
        
        public System.Threading.Tasks.Task<FuelClient.Service.EmployeeToCarRelation[]> GetEmployeeToCarByIdAsync(FuelClient.Service.FEmployee employee) {
            return base.Channel.GetEmployeeToCarByIdAsync(employee);
        }
        
        public FuelClient.Service.Car[] GetUnconnectedCars() {
            return base.Channel.GetUnconnectedCars();
        }
        
        public System.Threading.Tasks.Task<FuelClient.Service.Car[]> GetUnconnectedCarsAsync() {
            return base.Channel.GetUnconnectedCarsAsync();
        }
        
        public FuelClient.Service.Refuel[] GetRefuelById(FuelClient.Service.Car car) {
            return base.Channel.GetRefuelById(car);
        }
        
        public System.Threading.Tasks.Task<FuelClient.Service.Refuel[]> GetRefuelByIdAsync(FuelClient.Service.Car car) {
            return base.Channel.GetRefuelByIdAsync(car);
        }
        
        public FuelClient.Service.Car GetCarIdByLicensePlate(string licensePlate) {
            return base.Channel.GetCarIdByLicensePlate(licensePlate);
        }
        
        public System.Threading.Tasks.Task<FuelClient.Service.Car> GetCarIdByLicensePlateAsync(string licensePlate) {
            return base.Channel.GetCarIdByLicensePlateAsync(licensePlate);
        }
    }
}
